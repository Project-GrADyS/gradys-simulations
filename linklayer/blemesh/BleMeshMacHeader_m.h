//
// Generated file, do not edit! Created by nedtool 5.6 from linklayer/blemesh/BleMeshMacHeader.msg.
//

#ifndef __INET_BLEMESHMACHEADER_M_H
#define __INET_BLEMESHMACHEADER_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace inet {

class BleMeshMacHeader;
} // namespace inet

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

#include "inet/linklayer/common/MacAddress_m.h" // import inet.linklayer.common.MacAddress


namespace inet {

/**
 * Class generated from <tt>linklayer/blemesh/BleMeshMacHeader.msg:34</tt> by nedtool.
 * <pre>
 * //
 * // A CSMA mac header format definition
 * //
 * // \@author Daniel Willkomm
 * //
 * class BleMeshMacHeader extends FieldsChunk
 * {
 *     MacAddress srcAddr;
 *     MacAddress destAddr;
 *     int networkProtocol = -1;
 *     long sequenceId; // Sequence Number to detect duplicate messages
 * }
 * </pre>
 */
class BleMeshMacHeader : public ::inet::FieldsChunk
{
  protected:
    MacAddress srcAddr;
    MacAddress destAddr;
    int networkProtocol = -1;
    long sequenceId = 0;

  private:
    void copy(const BleMeshMacHeader& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BleMeshMacHeader&);

  public:
    BleMeshMacHeader();
    BleMeshMacHeader(const BleMeshMacHeader& other);
    virtual ~BleMeshMacHeader();
    BleMeshMacHeader& operator=(const BleMeshMacHeader& other);
    virtual BleMeshMacHeader *dup() const override {return new BleMeshMacHeader(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const MacAddress& getSrcAddr() const;
    virtual MacAddress& getSrcAddrForUpdate() { handleChange();return const_cast<MacAddress&>(const_cast<BleMeshMacHeader*>(this)->getSrcAddr());}
    virtual void setSrcAddr(const MacAddress& srcAddr);
    virtual const MacAddress& getDestAddr() const;
    virtual MacAddress& getDestAddrForUpdate() { handleChange();return const_cast<MacAddress&>(const_cast<BleMeshMacHeader*>(this)->getDestAddr());}
    virtual void setDestAddr(const MacAddress& destAddr);
    virtual int getNetworkProtocol() const;
    virtual void setNetworkProtocol(int networkProtocol);
    virtual long getSequenceId() const;
    virtual void setSequenceId(long sequenceId);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const BleMeshMacHeader& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, BleMeshMacHeader& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_BLEMESHMACHEADER_M_H

