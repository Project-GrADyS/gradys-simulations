[General]
network = mobilityDronesMAM
sim-time-limit = 200s
#repeat = 8

#
# environment
#
*.environment.ground.typename = "FlatGround"
*.coordinateSystem.sceneLongitude = -47.926634deg
*.coordinateSystem.sceneLatitude = -15.840075deg
*.coordinateSystem.sceneHeading = 90deg # scene orientation

#
# mobility settings
#
*.quads[*].mobility.speed = 10mps
*.quads[*].osgModel = "3d/drone.ive.80.scale.0,0,90.rot"
*.quads[*].mobility.typename = "DroneMobility"
*.quads[*].mobility.coordinateSystemModule = "coordinateSystem" # Empty if the drone should follow Euclidean coordinates or "coordinateSystem" if it should follow coordinates
*.quads[*].mobility.waypointFile = "paths/gradys-vai-e-volta-descendo-5s-v1.txt"
*.quads[*].mobility.waypointProximity = 1m
**.mobility.initFromDisplayString = false

*.sensor*[*].mobility.typename = "StationaryMobility"  
*.sensor*[*].mobility.coordinateSystemModule = "coordinateSystem"
*.sensor*[*].mobility.initialAltitude = 0m

*.groundStation.mobility.typename = "StationaryMobility"
*.groundStation.mobility.coordinateSystemModule = "coordinateSystem"
*.groundStation.mobility.initialLatitude = -15.840068deg
*.groundStation.mobility.initialLongitude = -47.926633deg

#
# radio medium settings
#
*.radioMedium.analogModel.typename = "DimensionalAnalogModel"
*.radioMedium.backgroundNoise.typename = "IsotropicDimensionalBackgroundNoise"
*.radioMedium.backgroundNoise.powerSpectralDensity = -113dBmWpMHz

#
# radio settings
# 0 --> 802.11
# 1 --> 802.15.4
#

#**.analogModel.ignorePartialInterference = true

# 2452MHz/20MHz bw
*.*.wlan[0].radio.typename = "Ieee80211DimensionalRadio"
*.*.wlan[0].radio.channelNumber = 8
*.*.wlan[0].radio.receiver.snirThresholdMode = "mean"
*.*.wlan[0].radio.receiver.errorModel.snirMode = "mean"

*.*.wlan[0].radio.transmitter.frequencyGains = "left c-b*1.5 -40dB linear c-b -28dB linear c-b*0.5-1MHz -20dB linear c-b*0.5+1MHz 0dB linear c+b*0.5-1MHz 0dB linear c+b*0.5+1MHz -20dB linear c+b -28dB linear c+b*1.5 -40dB right"

# default 2450MHz/2.8MHz bw
*.*.wlan[1].typename = "Ieee802154NarrowbandInterface"
*.*.wlan[1].radio.typename = "Ieee802154NarrowbandDimensionalRadio"
*.*.wlan[1].radio.transmitter.frequencyGains = "left c-5MHz -40dB linear c-2MHz -20dB linear c-1MHz 0dB either c+1MHz 0dB linear c+2MHz -20dB linear c+5MHz -40dB right"
*.*.wlan[1].radio.receiver.snirThresholdMode = "mean"
*.*.wlan[1].radio.receiver.errorModel.snirMode = "mean"

*.sensor*[*].wlan[1].radio.transmitter.power = 0.000275mW # Reducing power to match Bluetooth Low Energy 100m range #TODO: change this for all devices?
*.quads[*].wlan[0].radio.transmitter.power = 0.7mW

#
# drone networking:
#

*.quads[*].numWlanInterfaces = 2
*.quads[*].wlan[1].typename = "BleMeshNarrowbandInterface"
*.quads[*].wlan[1].radio.transmitter.power = 0.000275mW # Reducing power to match Bluetooth Low Energy 100m range

#
# sensor networking:
#
*.sensor*[*].wlan[1].typename = "BleMeshNarrowbandInterface"
*.sensor*[*].numWlanInterfaces = 2

#
# ipv4 settings
#
*.sensor*[*].ipv4.arp.typename = "GlobalArp"
*.quads[*].ipv4.arp.typename = "GlobalArp"
*.groundStation.ipv4.arp.typename = "GlobalArp"

*.sensor*[*].ipv4.ip.directBroadcastInterfaces = "wlan0,wlan1"
*.quads[*].ipv4.ip.directBroadcastInterfaces = "wlan0,wlan1"
*.groundStation.ipv4.ip.directBroadcastInterfaces = "wlan0,wlan1"

*.sensor*[*].ipv4.ip.limitedBroadcast = true
*.quads[*].ipv4.ip.limitedBroadcast = true
*.groundStation.ipv4.ip.limitedBroadcast = true

#
# BTM-R / MAM settings
#
*.sensors_rly[*].app[0].relayNode = true
*.sensors[*].app[0].relayMode = "BMesh"

*.sensors_lpn[*].wlan[1].mac.lowPowerNode = true
*.sensors_lpn[*].app[1].lowPowerNode = true
*.sensors_fn[*].app[1].friendNode = true

#
# Visualizer settings
#

*.visualizer.osgVisualizer.typename = "IntegratedOsgVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.typename = "SceneOsgEarthVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.mapFile = "map.earth"
*.visualizer.osgVisualizer.sceneVisualizer.sceneImageSize = 10000m
*.visualizer.osgVisualizer.sceneVisualizer.axisLength = 500m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinX = -200m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinY = -200m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinZ = 0m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxX = 5000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxY = 5000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxZ = 5000m

# for video recording
#*.visualizer.*.fadeOutMode = "animationTime"

# network node visualization: disable labels
*.visualizer.osgVisualizer.networkNodeVisualizer.displayModuleName = true

# enable drone load visualization
*.visualizer.*.statisticVisualizer.signalName = "dataLoad"
*.visualizer.*.statisticVisualizer.format = "(%v)"
*.visualizer.*.statisticVisualizer.textColor = "red"
*.visualizer.*.statisticVisualizer.font = "Courier New, 12px, bold"
*.visualizer.*.statisticVisualizer.opacity = 1
*.visualizer.*.statisticVisualizer.sourceFilter = "*.quads[*].** *.groundStation.**"

# mobility visualization
*.visualizer.*.mobilityVisualizer.displayMobility = true # master switch
*.visualizer.*.mobilityVisualizer.displayPositions = true
*.visualizer.*.mobilityVisualizer.displayOrientations = true
*.visualizer.*.mobilityVisualizer.displayVelocities = true
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true
*.visualizer.*.mobilityVisualizer.animationSpeed = 10

# mobility constraint area
**.constraintAreaMinX = -5000m
**.constraintAreaMinY = -5000m
**.constraintAreaMinZ = -100m
**.constraintAreaMaxX = 5000m
**.constraintAreaMaxY = 5000m
**.constraintAreaMaxZ = 5000m
# original from 2D: **.updateInterval = 0.1s # test with 0s too, and let getCurrentPosition update the display string from a test module

#
# Energy settings
#
*.sensor*.wlan[0].radio.energyConsumer.typename = "SensorStateBasedEpEnergyConsumer"
*.sensor*.wlan[0].radio.energyConsumer.offPowerConsumption = 0mW
*.sensor*.wlan[0].radio.energyConsumer.sleepPowerConsumption = 1mW
*.sensor*.wlan[0].radio.energyConsumer.switchingPowerConsumption = 1mW
*.sensor*.wlan[0].radio.energyConsumer.receiverIdlePowerConsumption = 2mW
*.sensor*.wlan[0].radio.energyConsumer.receiverBusyPowerConsumption = 5mW
*.sensor*.wlan[0].radio.energyConsumer.receiverReceivingPowerConsumption = 10mW
*.sensor*.wlan[0].radio.energyConsumer.transmitterIdlePowerConsumption = 2mW
*.sensor*.wlan[0].radio.energyConsumer.transmitterTransmittingPowerConsumption = 100mW

*.sensor*.energyStorage.typename = "IdealEpEnergyStorage"

#
# ground station application
#
*.groundStation.protocol.typename = "ZigzagProtocol"
*.groundStation.numApps = 1
*.groundStation.app[0].typename = "UdpMobileNodeCommunicationApp"
*.groundStation.app[0].destPort = 1000
*.groundStation.app[0].localPort = 1000
*.groundStation.app[0].sendInterval = 1s
*.groundStation.app[0].startTime = 130s
*.groundStation.app[0].stopTime = -1s
*.groundStation.app[0].messageLength = 1454Byte
*.groundStation.app[0].packetName = "UAV-DEFAULT-PAYLOAD"
*.groundStation.app[0].destAddresses = "quads[0]"

#
# drone applications
#
*.quads[*].numApps = 2

*.quads[*].app[0].typename = "UdpMobileNodeCommunicationApp"
*.quads[*].app[0].localPort = 1000
*.quads[*].app[0].destPort = 1000
*.quads[*].app[0].sendInterval = 1s
*.quads[*].app[0].startTime =1s
*.quads[*].app[0].stopTime = -1s
*.quads[*].app[0].messageLength = 1454Byte
*.quads[*].app[0].packetName = "UAV-DEFAULT-PAYLOAD" #packetName is used as a default payload

*.quads[*].app[1].typename = "MamDataCollectorApp"
*.quads[*].app[1].localPort = 5000
*.quads[*].app[1].destPort = 5000
*.quads[*].protocol.typename = "ZigzagProtocol"


#
# sensor application
#
*.sensors*[*].numApps = 1
*.sensors*[*].app[0].typename = "MamNodeApp"
*.sensors*[*].app[0].destAddresses = "quads[0]"
*.sensors*[*].app[0].localPort = 5000
*.sensors*[*].app[0].destPort = 5000
*.sensors*[*].app[0].messageLength = 1000B
*.sensors*[*].app[0].sendInterval = exponential(12ms)
*.sensors*[*].app[0].packetName = "UDPData"

#*.sensors[*].app[0].typename = "UdpSensorCommunicationApp"
#*.sensors[*].app[0].destAddresses = "quads[0] quads[1] quads[2] quads[3]"
#*.sensors[*].app[0].destPort = 1000
#*.sensors[*].app[0].localPort = 1000
#*.sensors[*].app[0].sendInterval = 8s
#*.sensors[*].app[0].startTime = exponential(1s)
#*.sensors[*].app[0].messageLength = 1454Byte

*.quads[*].app[1].startTime = 0


[Config Sim4drone]
*.numUAVs = 1
*.quads[0].app[0].destAddresses = "sensors[0] groundStation"
#*.quads[1].app[0].destAddresses = "quads[0] quads[2] quads[3] sensors[0] sensors[1] sensors[2] groundStation"
#*.quads[2].app[0].destAddresses = "quads[0] quads[1] quads[3] sensors[0] sensors[1] sensors[2] groundStation"
#*.quads[3].app[0].destAddresses = "quads[0] quads[1] quads[2] sensors[0] sensors[1] sensors[2] groundStation"

*.quads[*].mobility.waypointFile = "paths/voo2.waypoints"
*.quads[*].app[*].timeoutDuration = 10s
*.quads[0].mobility.startTime = 0s
#*.quads[1].mobility.startTime = 40s
#*.quads[2].mobility.startTime = 80s
#*.quads[3].mobility.startTime = 110s
*.quads[0].app[*].startTime = normal(1s, 1s)
#*.quads[1].app[*].startTime = normal(40s, 1s)
#*.quads[2].app[*].startTime = normal(80s, 1s)
#*.quads[3].app[*].startTime = normal(110s, 1s)


*.numSensors = 8

*.sensors[0].mobility.initialLatitude = -15.84245230deg
*.sensors[0].mobility.initialLongitude = -47.92948720deg
*.sensors[1].mobility.initialLatitude = -15.84262780deg
*.sensors[1].mobility.initialLongitude = -47.92650460deg
*.sensors[2].mobility.initialLatitude = -15.84161630deg
*.sensors[2].mobility.initialLongitude = -47.92395110deg


#*.sensors[3..7].app[0].typename = "UdpSinkMobileSenserNode"
*.sensors[3].mobility.initialLatitude = -15.8436264deg
*.sensors[3].mobility.initialLongitude = -47.9270250deg
*.sensors[4].mobility.initialLatitude = -15.8406461deg
*.sensors[4].mobility.initialLongitude = -47.9240263deg
*.sensors[5].mobility.initialLatitude = -15.8416370deg
*.sensors[5].mobility.initialLongitude = -47.9227066deg
*.sensors[6].mobility.initialLatitude = -15.8437115deg
*.sensors[6].mobility.initialLongitude = -47.9259145deg
*.sensors[7].mobility.initialLatitude = -15.8437425deg
*.sensors[7].mobility.initialLongitude = -47.9246378deg


*.sensors_rly[0].mobility.initialLatitude = -15.8436244deg
*.sensors_rly[0].mobility.initialLongitude = -47.9270250deg
*.sensors_rly[1].mobility.initialLatitude = -15.8406441deg
*.sensors_rly[1].mobility.initialLongitude = -47.9240263deg
*.sensors_rly[2].mobility.initialLatitude = -15.843695deg
*.sensors_rly[2].mobility.initialLongitude = -47.9259145deg


