[General]
scheduler-class = "inet::RealTimeScheduler"
network = Communication_simulation
debug-on-errors = true

*.visualizer.*.mobilityVisualizer.animationSpeed = 20
# Visualizer settings
*.visualizer.osgVisualizer.typename = "IntegratedOsgVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.typename = "SceneOsgEarthVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.mapFile = "map.earth"
*.visualizer.osgVisualizer.sceneVisualizer.axisLength = 500m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinX = -5000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinY = -5000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinZ = 0m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxX = 5000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxY = 5000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxZ = 5000m
# mobility visualization
*.visualizer.*.mobilityVisualizer.displayMobility = true # master switch
*.visualizer.*.mobilityVisualizer.displayPositions = true
*.visualizer.*.mobilityVisualizer.displayOrientations = true
*.visualizer.*.mobilityVisualizer.displayVelocities = true
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true

#environment
*.environment.ground.typename = "FlatGround"

# mobility constraint area
**.constraintAreaMinX = -300m
**.constraintAreaMinY = -300m
**.constraintAreaMinZ = -5m
**.constraintAreaMaxX = 300m
**.constraintAreaMaxY = 300m
**.constraintAreaMaxZ = 100m

*.coordinateSystem.sceneLatitude = -35.36326015deg
*.coordinateSystem.sceneLongitude = 149.16523839deg
*.coordinateSystem.sceneHeading = 90deg # scene orientation

# Setting up simulator paths
*.client[*].mobility.copterSimulatorPath = "/home/lac/Desktop/mavsimnet_files/arducopter.elf" # FILL YOUR COPTER SIMULATOR PATH HERE
*.client[*].mobility.planeSimulatorPath = "" # FILL YOUR PLANE SIMULATOR PATH HERE
*.client[*].mobility.roverSimulatorPath = "/home/lac/Desktop/mavsimnet_files/ardurover.elf" # FILL YOUR ROVER SIMULATOR PATH HERE

# Setting simulation to only start when vehicles are ready
*.client[*].mobility.waitUntilReady = true

# Setting up client
*.numClients = 3
*.client[0..4].osgModel = "3d/drone.ive.1.scale" # Drones
*.client[5..9].osgModel = "3d/car.ive.(0.15).scale.0,0,270.rot" # Rovers
*.client[*].mobility.typename = "MAVLinkRandomWaypointMobility"
*.client[*].mobility.waitTime = 10s
*.client[*].mobility.coordinateSystemModule = "coordinateSystem"
*.client[0..4].mobility.speed = 10mps
*.client[5..9].mobility.speed = 5mps
*.client[0..4].mobility.vehicleType = 1
*.client[5..9].mobility.vehicleType = 4
*.client[0..4].mobility.paramPath = "/home/lac/Desktop/mavsimnet_files/copter.parm" # FILL YOUR COPTER PARAM PATH HERE
*.client[5..9].mobility.paramPath = "/home/lac/Desktop/mavsimnet_files/rover.parm" # FILL YOUR ROVER PARAM PATH HERE

*.client[*].numApps = 1
*.client[0..4].app[0].typename = "UdpBasicApp"
*.client[0..4].app[0].destAddresses = "client[5] client[6] client[7] client[8] client[9]"
*.client[0..4].app[0].destPort = 5000
*.client[0..4].app[0].messageLength = 1000B
*.client[0..4].app[0].sendInterval = exponential(1s)
*.client[0..4].app[0].startTime = exponential(10s)
*.client[0..4].app[0].packetName = "UDPData"

*.client[5..9].app[0].typename = "UdpSink"
*.client[5..9].app[0].localPort = 5000